// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`linting base disallowed.js fixture matches snapshot 1`] = `
Array [
  Object {
    "column": 10,
    "endColumn": 11,
    "endLine": 1,
    "line": 1,
    "message": "Identifier name 'x' is too short (< 2).",
    "messageId": "tooShort",
    "nodeType": "Identifier",
    "ruleId": "id-length",
    "severity": 1,
  },
  Object {
    "column": 10,
    "endColumn": 11,
    "endLine": 1,
    "line": 1,
    "message": "'x' is defined but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 14,
    "endLine": 1,
    "line": 1,
    "message": "Identifier name 'y' is too short (< 2).",
    "messageId": "tooShort",
    "nodeType": "Identifier",
    "ruleId": "id-length",
    "severity": 1,
  },
  Object {
    "column": 13,
    "endColumn": 14,
    "endLine": 1,
    "line": 1,
    "message": "'y' is defined but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 22,
    "endLine": 2,
    "line": 2,
    "message": "'xIsACoolParam' is not defined.",
    "messageId": "undef",
    "nodeType": "Identifier",
    "ruleId": "no-undef",
    "severity": 2,
  },
  Object {
    "column": 2,
    "endColumn": 3,
    "endLine": 3,
    "fix": Object {
      "range": Array [
        41,
        48,
      ],
      "text": "}

let",
    },
    "line": 3,
    "message": "Unnecessary semicolon.",
    "messageId": "unexpected",
    "nodeType": "EmptyStatement",
    "ruleId": "no-extra-semi",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 11,
    "endLine": 5,
    "line": 5,
    "message": "'things' is assigned a value but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 11,
    "endLine": 5,
    "fix": Object {
      "range": Array [
        45,
        172,
      ],
      "text": "const things = {
	a: 13,
	cd: 99.99,
	e9: 6e99,
	f7: (  ) => ['x'],
	12: '32',
	ff: xx => xx,
	gg: ( {fds, }) => 
        fds,
};",
    },
    "line": 5,
    "message": "'things' is never reassigned. Use 'const' instead.",
    "messageId": "useConst",
    "nodeType": "Identifier",
    "ruleId": "prefer-const",
    "severity": 2,
  },
  Object {
    "column": 2,
    "endColumn": 3,
    "endLine": 6,
    "line": 6,
    "message": "Identifier name 'a' is too short (< 2).",
    "messageId": "tooShort",
    "nodeType": "Identifier",
    "ruleId": "id-length",
    "severity": 1,
  },
  Object {
    "column": 7,
    "endColumn": 9,
    "endLine": 9,
    "fix": Object {
      "range": Array [
        97,
        99,
      ],
      "text": "",
    },
    "line": 9,
    "message": "There should be no space after this paren.",
    "messageId": "rejectedOpeningSpace",
    "nodeType": "Program",
    "ruleId": "space-in-parens",
    "severity": 2,
  },
  Object {
    "column": 7,
    "endColumn": 9,
    "endLine": 9,
    "fix": Object {
      "range": Array [
        97,
        99,
      ],
      "text": "",
    },
    "line": 9,
    "message": "There should be no space before this paren.",
    "messageId": "rejectedClosingSpace",
    "nodeType": "Program",
    "ruleId": "space-in-parens",
    "severity": 2,
  },
  Object {
    "column": 7,
    "endColumn": 9,
    "endLine": 9,
    "fix": Object {
      "range": Array [
        97,
        99,
      ],
      "text": " ",
    },
    "line": 9,
    "message": "Multiple spaces found before ')'.",
    "messageId": "multipleSpaces",
    "nodeType": "Punctuator",
    "ruleId": "no-multi-spaces",
    "severity": 2,
  },
  Object {
    "column": 14,
    "endColumn": 15,
    "endLine": 9,
    "fix": Object {
      "range": Array [
        105,
        105,
      ],
      "text": " ",
    },
    "line": 9,
    "message": "A space is required after '['.",
    "messageId": "missingSpaceAfter",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-spacing",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 19,
    "endLine": 9,
    "fix": Object {
      "range": Array [
        108,
        108,
      ],
      "text": " ",
    },
    "line": 9,
    "message": "A space is required before ']'.",
    "messageId": "missingSpaceBefore",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-spacing",
    "severity": 2,
  },
  Object {
    "column": 8,
    "endColumn": 9,
    "endLine": 12,
    "fix": Object {
      "range": Array [
        145,
        145,
      ],
      "text": " ",
    },
    "line": 12,
    "message": "A space is required after '{'.",
    "messageId": "requireSpaceAfter",
    "nodeType": "ObjectPattern",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 13,
    "endLine": 12,
    "fix": Object {
      "range": Array [
        145,
        151,
      ],
      "text": "fds }",
    },
    "line": 12,
    "message": "Unexpected trailing comma.",
    "messageId": "unexpected",
    "nodeType": "Property",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 16,
    "endLine": 12,
    "fix": Object {
      "range": Array [
        151,
        151,
      ],
      "text": " ",
    },
    "line": 12,
    "message": "There must be a space before this paren.",
    "messageId": "missingClosingSpace",
    "nodeType": "Program",
    "ruleId": "space-in-parens",
    "severity": 2,
  },
  Object {
    "column": 19,
    "endColumn": 20,
    "endLine": 12,
    "fix": Object {
      "range": Array [
        155,
        156,
      ],
      "text": "",
    },
    "line": 12,
    "message": "Trailing spaces not allowed.",
    "messageId": "trailingSpace",
    "nodeType": "Program",
    "ruleId": "no-trailing-spaces",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 13,
    "fix": Object {
      "range": Array [
        157,
        165,
      ],
      "text": "		",
    },
    "line": 13,
    "message": "Expected indentation of 2 tabs but found 8 spaces.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 12,
    "endLine": 16,
    "line": 16,
    "message": "'nonExistent' is not defined.",
    "messageId": "undef",
    "nodeType": "Identifier",
    "ruleId": "no-undef",
    "severity": 2,
  },
  Object {
    "column": 15,
    "fix": Object {
      "range": Array [
        188,
        188,
      ],
      "text": "
",
    },
    "line": 16,
    "message": "Newline required at end of file but not found.",
    "messageId": "missing",
    "nodeType": "Program",
    "ruleId": "eol-last",
    "severity": 2,
  },
]
`;

exports[`linting cli disallowed.js fixture matches snapshot 1`] = `
Array [
  Object {
    "column": 7,
    "endColumn": 13,
    "endLine": 1,
    "line": 1,
    "message": "'unused' is assigned a value but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
  },
]
`;

exports[`linting typescript disallowed.ts fixture matches snapshot 1`] = `
Array [
  Object {
    "column": 48,
    "endColumn": 61,
    "endLine": 1,
    "line": 1,
    "message": "'three' is defined but never used. Allowed unused args must match /^_/u.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "@typescript-eslint/no-unused-vars",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 14,
    "endLine": 5,
    "line": 5,
    "message": "Do not use \\"@ts-ignore\\" because it alters compilation errors.",
    "messageId": "tsDirectiveComment",
    "nodeType": "Line",
    "ruleId": "@typescript-eslint/ban-ts-comment",
    "severity": 2,
  },
]
`;
