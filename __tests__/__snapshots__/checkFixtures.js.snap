// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`linting base disallowed.js fixture matches snapshot 1`] = `
Array [
  Object {
    "column": 12,
    "endColumn": 38,
    "endLine": 1,
    "line": 1,
    "message": "Found require(\\"child_process\\")",
    "nodeType": "CallExpression",
    "ruleId": "security/detect-child-process",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 8,
    "endLine": 4,
    "line": 4,
    "message": "Found child_process.exec() with non Literal first argument",
    "nodeType": "MemberExpression",
    "ruleId": "security/detect-child-process",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 26,
    "endLine": 7,
    "line": 7,
    "message": "Found non-literal argument in require",
    "nodeType": "CallExpression",
    "ruleId": "security/detect-non-literal-require",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 25,
    "endLine": 10,
    "line": 10,
    "message": "Found non-literal argument to RegExp Constructor",
    "nodeType": "NewExpression",
    "ruleId": "security/detect-non-literal-regexp",
    "severity": 1,
  },
  Object {
    "column": 10,
    "endColumn": 11,
    "endLine": 12,
    "line": 12,
    "message": "Identifier name 'x' is too short (< 2).",
    "messageId": "tooShort",
    "nodeType": "Identifier",
    "ruleId": "id-length",
    "severity": 1,
  },
  Object {
    "column": 10,
    "endColumn": 11,
    "endLine": 12,
    "line": 12,
    "message": "'x' is defined but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 14,
    "endLine": 12,
    "line": 12,
    "message": "Identifier name 'y' is too short (< 2).",
    "messageId": "tooShort",
    "nodeType": "Identifier",
    "ruleId": "id-length",
    "severity": 1,
  },
  Object {
    "column": 13,
    "endColumn": 14,
    "endLine": 12,
    "line": 12,
    "message": "'y' is defined but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 22,
    "endLine": 13,
    "line": 13,
    "message": "'xIsACoolParam' is not defined.",
    "messageId": "undef",
    "nodeType": "Identifier",
    "ruleId": "no-undef",
    "severity": 2,
  },
  Object {
    "column": 2,
    "endColumn": 3,
    "endLine": 14,
    "fix": Object {
      "range": Array [
        297,
        304,
      ],
      "text": "}

let",
    },
    "line": 14,
    "message": "Unnecessary semicolon.",
    "messageId": "unexpected",
    "nodeType": "EmptyStatement",
    "ruleId": "no-extra-semi",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 11,
    "endLine": 16,
    "fix": Object {
      "range": Array [
        301,
        427,
      ],
      "text": "const things = {
	a: 13,
	cd: 99.99,
	e9: 6e99,
	f7: (  ) => ['x'],
	12: '32',
	ff: xx => xx,
	gg: ( {fds, }) =>
        fds,
};",
    },
    "line": 16,
    "message": "'things' is never reassigned. Use 'const' instead.",
    "messageId": "useConst",
    "nodeType": "Identifier",
    "ruleId": "prefer-const",
    "severity": 2,
  },
  Object {
    "column": 2,
    "endColumn": 3,
    "endLine": 17,
    "line": 17,
    "message": "Identifier name 'a' is too short (< 2).",
    "messageId": "tooShort",
    "nodeType": "Identifier",
    "ruleId": "id-length",
    "severity": 1,
  },
  Object {
    "column": 7,
    "endColumn": 9,
    "endLine": 20,
    "fix": Object {
      "range": Array [
        353,
        355,
      ],
      "text": "",
    },
    "line": 20,
    "message": "There should be no space after this paren.",
    "messageId": "rejectedOpeningSpace",
    "nodeType": "Program",
    "ruleId": "space-in-parens",
    "severity": 2,
  },
  Object {
    "column": 7,
    "endColumn": 9,
    "endLine": 20,
    "fix": Object {
      "range": Array [
        353,
        355,
      ],
      "text": "",
    },
    "line": 20,
    "message": "There should be no space before this paren.",
    "messageId": "rejectedClosingSpace",
    "nodeType": "Program",
    "ruleId": "space-in-parens",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 16,
    "endLine": 23,
    "fix": Object {
      "range": Array [
        407,
        407,
      ],
      "text": " ",
    },
    "line": 23,
    "message": "There must be a space before this paren.",
    "messageId": "missingClosingSpace",
    "nodeType": "Program",
    "ruleId": "space-in-parens",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 33,
    "endLine": 29,
    "line": 29,
    "message": "Unexpected \`await\` inside a loop.",
    "messageId": "unexpectedAwait",
    "nodeType": "AwaitExpression",
    "ruleId": "no-await-in-loop",
    "severity": 2,
  },
  Object {
    "column": 2,
    "endColumn": 6,
    "endLine": 36,
    "line": 34,
    "message": "No async function in forEachs",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-async-foreach/no-async-foreach",
    "severity": 2,
  },
  Object {
    "column": 41,
    "endColumn": 46,
    "endLine": 34,
    "fix": Object {
      "range": Array [
        653,
        662,
      ],
      "text": "thing",
    },
    "line": 34,
    "message": "Unexpected parentheses around single function argument.",
    "messageId": "unexpectedParens",
    "nodeType": "ArrowFunctionExpression",
    "ruleId": "arrow-parens",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 12,
    "endLine": 39,
    "line": 39,
    "message": "'nonExistent' is not defined.",
    "messageId": "undef",
    "nodeType": "Identifier",
    "ruleId": "no-undef",
    "severity": 2,
  },
]
`;

exports[`linting cli disallowed.js fixture matches snapshot 1`] = `Array []`;

exports[`linting typescript disallowed.ts fixture matches snapshot 1`] = `
Array [
  Object {
    "column": 48,
    "endColumn": 61,
    "endLine": 1,
    "line": 1,
    "message": "'three' is defined but never used. Allowed unused args must match /^_/u.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "@typescript-eslint/no-unused-vars",
    "severity": 2,
  },
  Object {
    "column": 55,
    "endColumn": 61,
    "endLine": 1,
    "fix": Object {
      "range": Array [
        54,
        60,
      ],
      "text": "string",
    },
    "line": 1,
    "message": "Don't use \`String\` as a type. Use string instead",
    "messageId": "bannedTypeMessage",
    "nodeType": "Identifier",
    "ruleId": "@typescript-eslint/ban-types",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 14,
    "endLine": 5,
    "line": 5,
    "message": "Do not use \\"@ts-ignore\\" because it alters compilation errors.",
    "messageId": "tsDirectiveComment",
    "nodeType": "Line",
    "ruleId": "@typescript-eslint/ban-ts-comment",
    "severity": 2,
  },
]
`;
