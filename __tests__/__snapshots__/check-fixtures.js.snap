// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`linting javascript.js fixture matches snapshot 1`] = `
[
  {
    "column": 1,
    "endColumn": 25,
    "endLine": 10,
    "line": 10,
    "message": "Found non-literal argument to RegExp Constructor",
    "nodeType": "NewExpression",
    "ruleId": "security/detect-non-literal-regexp",
    "severity": 1,
  },
  {
    "column": 10,
    "endColumn": 11,
    "endLine": 12,
    "line": 12,
    "message": "Identifier name 'x' is too short (< 2).",
    "messageId": "tooShort",
    "nodeType": "Identifier",
    "ruleId": "id-length",
    "severity": 1,
  },
  {
    "column": 10,
    "endColumn": 11,
    "endLine": 12,
    "line": 12,
    "message": "'x' is defined but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
  },
  {
    "column": 13,
    "endColumn": 14,
    "endLine": 12,
    "line": 12,
    "message": "Identifier name 'y' is too short (< 2).",
    "messageId": "tooShort",
    "nodeType": "Identifier",
    "ruleId": "id-length",
    "severity": 1,
  },
  {
    "column": 13,
    "endColumn": 14,
    "endLine": 12,
    "line": 12,
    "message": "'y' is defined but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
  },
  {
    "column": 9,
    "endColumn": 22,
    "endLine": 13,
    "line": 13,
    "message": "'xIsACoolParam' is not defined.",
    "messageId": "undef",
    "nodeType": "Identifier",
    "ruleId": "no-undef",
    "severity": 2,
  },
  {
    "column": 5,
    "endColumn": 11,
    "endLine": 16,
    "fix": {
      "range": [
        300,
        419,
      ],
      "text": "const things = {
	a: 13,
	cd: 99.99,
	e9: 6e99,
	f7: () => [ 'x' ],
	12: '32',
	ff: xx => xx,
	gg: ( { fds } ) => fds,
};",
    },
    "line": 16,
    "message": "'things' is never reassigned. Use 'const' instead.",
    "messageId": "useConst",
    "nodeType": "Identifier",
    "ruleId": "prefer-const",
    "severity": 2,
  },
  {
    "column": 2,
    "endColumn": 3,
    "endLine": 17,
    "line": 17,
    "message": "Identifier name 'a' is too short (< 2).",
    "messageId": "tooShort",
    "nodeType": "Identifier",
    "ruleId": "id-length",
    "severity": 1,
  },
  {
    "column": 3,
    "endColumn": 33,
    "endLine": 28,
    "line": 28,
    "message": "Unexpected \`await\` inside a loop.",
    "messageId": "unexpectedAwait",
    "nodeType": "AwaitExpression",
    "ruleId": "no-await-in-loop",
    "severity": 2,
  },
  {
    "column": 2,
    "endColumn": 6,
    "endLine": 35,
    "line": 33,
    "message": "Avoid passing an async function to Array.prototype.forEach",
    "nodeType": "ExpressionStatement",
    "ruleId": "@automattic/wpvip/no-async-foreach",
    "severity": 2,
  },
  {
    "column": 8,
    "endColumn": 11,
    "endLine": 39,
    "line": 39,
    "message": "'lol' is already declared in the upper scope on line 3 column 7.",
    "messageId": "noShadow",
    "nodeType": "Identifier",
    "ruleId": "no-shadow",
    "severity": 2,
  },
  {
    "column": 1,
    "endColumn": 12,
    "endLine": 43,
    "line": 43,
    "message": "'nonExistent' is not defined.",
    "messageId": "undef",
    "nodeType": "Identifier",
    "ruleId": "no-undef",
    "severity": 2,
  },
]
`;

exports[`linting typescript.ts fixture matches snapshot 1`] = `
[
  {
    "column": 1,
    "endColumn": 14,
    "endLine": 5,
    "fix": {
      "range": [
        95,
        108,
      ],
      "text": "// @ts-expect-error",
    },
    "line": 5,
    "message": "Use "@ts-expect-error" to ensure an error is actually being suppressed.",
    "messageId": "preferExpectErrorComment",
    "nodeType": "Line",
    "ruleId": "@typescript-eslint/prefer-ts-expect-error",
    "severity": 1,
  },
  {
    "column": 21,
    "endColumn": 24,
    "endLine": 13,
    "line": 13,
    "message": "Unsafe return of an \`any\` typed value.",
    "messageId": "unsafeReturn",
    "nodeType": "Identifier",
    "ruleId": "@typescript-eslint/no-unsafe-return",
    "severity": 2,
  },
  {
    "column": 45,
    "endColumn": 48,
    "endLine": 16,
    "line": 16,
    "message": "Unexpected any. Specify a different type.",
    "messageId": "unexpectedAny",
    "nodeType": "TSAnyKeyword",
    "ruleId": "@typescript-eslint/no-explicit-any",
    "severity": 2,
    "suggestions": [
      {
        "desc": "Use \`unknown\` instead, this will force you to explicitly, and safely assert the type is correct.",
        "fix": {
          "range": [
            289,
            292,
          ],
          "text": "unknown",
        },
        "messageId": "suggestUnknown",
      },
      {
        "desc": "Use \`never\` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",
        "fix": {
          "range": [
            289,
            292,
          ],
          "text": "never",
        },
        "messageId": "suggestNever",
      },
    ],
  },
  {
    "column": 8,
    "endColumn": 11,
    "endLine": 21,
    "line": 21,
    "message": "'add' is already declared in the upper scope on line 1 column 17.",
    "messageId": "noShadow",
    "nodeType": "Identifier",
    "ruleId": "@typescript-eslint/no-shadow",
    "severity": 2,
  },
]
`;
